/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the "Elastic License
 * 2.0", the "GNU Affero General Public License v3.0 only", and the "Server Side
 * Public License v 1"; you may not use this file except in compliance with, at
 * your election, the "Elastic License 2.0", the "GNU Affero General Public
 * License v3.0 only", or the "Server Side Public License, v 1".
 */

apply plugin: 'elasticsearch.build'
apply plugin: 'elasticsearch.publish'
apply plugin: 'elasticsearch.embedded-providers'

embeddedProviders {
  impl 'x-content', project(':libs:x-content:impl')
}

dependencies {
  api project(':libs:core')

  testImplementation(project(":test:framework")) {
    exclude group: 'org.elasticsearch', module: 'x-content'
  }
}

tasks.matching { it.name == "compileJava" }.configureEach {
  options.compilerArgs << '--add-modules=jdk.incubator.vector'
  // we remove Werror, since incubating suppression (-Xlint:-incubating)
  // is only support since JDK 22
  options.compilerArgs -= '-Werror'
}

tasks.named('test').configure {
  if (buildParams.getRuntimeJavaVersion().map{ it.majorVersion.toInteger() }.get() >= 21) {
    jvmArgs '--add-modules=jdk.incubator.vector'
  }
}

tasks.named('forbiddenApisMain').configure {
  // x-content does not depend on server
  // TODO: Need to decide how we want to handle for forbidden signatures with the changes to core
  replaceSignatureFiles 'jdk-signatures'
}

tasks.named("thirdPartyAudit").configure {
  ignoreMissingClasses(
          // from com.fasterxml.jackson.dataformat.yaml.YAMLMapper (jackson-dataformat-yaml)
          'com.fasterxml.jackson.databind.ObjectMapper',
          'com.fasterxml.jackson.databind.cfg.MapperBuilder'
  )
}

tasks.named("dependencyLicenses").configure {
  mapping from: /jackson-.*/, to: 'jackson'
}
